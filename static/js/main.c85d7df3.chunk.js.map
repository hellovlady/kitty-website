{"version":3,"sources":["utils/translateTextHelpers.ts","hooks/useI18n.ts","config/constants/types.ts","contexts/RefreshContext.tsx","hooks/useRefresh.ts","config/constants/contracts.ts","config/constants/farms.ts","utils/getRpcUrl.ts","utils/web3.ts","utils/addressHelpers.ts","utils/multicall.ts","state/farms/fetchFarms.ts","state/farms/index.ts","config/constants/pools.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","state/hooks.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","config/index.ts","contexts/BlockContext.tsx","hooks/useBlock.ts","utils/formatBalance.ts","components/layout/Flex.tsx","components/UnlockButton.tsx","components/Label/Label.tsx","hooks/useWeb3.ts","config/constants/index.ts","hooks/useContract.ts","utils/callHelpers.ts","hooks/useUnstake.ts","components/Balance.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/OldPastaTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","components/Tags.tsx","views/Pools/components/PoolCard.tsx","hooks/useApprove.ts","hooks/useStake.ts","hooks/useHarvest.ts","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Pasta.tsx","views/Home/Home.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","components/layout/Container.tsx","components/layout/Page.tsx","contexts/Localisation/translationsContext.ts"],"names":["variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","QuoteToken","PoolCategory","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","useEffect","interval","setInterval","a","prev","clearInterval","Provider","value","useRefresh","fastRefresh","slowRefresh","pizza","97","56","pasta","masterChef","pastaChef","wbnb","lottery","lotteryNFT","mulltiCall","busd","chs","hots","kp3rb","usdt","usdc","dai","eth","xchs","kittywbnb","kittychs","kittyusdt","kitty","cpizza","pizzaRabbits","ifo","farms","pid","lpSymbol","lpAddresses","tokenSymbol","tokenAddresses","quoteTokenSymbol","BNB","quoteTokenAdresses","contracts","BUSD","isCommunity","USDT","USDC","DAI","CHS","PIZZA","tokenDecimal","ETH","nodes","process","getNodeUrl","randomIndex","random","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","getWeb3","getMasterChefAddress","addresses","chainId","multicall","abi","calls","web3","multi","Contract","MultiCallAbi","itf","Interface","calldata","map","call","address","toLowerCase","encodeFunctionData","name","params","methods","aggregate","returnData","res","i","decodeFunctionResult","fetchFarms","Promise","all","farmsConfig","farmConfig","lpAdress","CHAIN_ID","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","BigNumber","div","lpTotalInQuoteToken","pow","times","tokenAmount","quoteTokenAmount","masterchefABI","info","totalAllocPoint","allocPoint","_hex","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","farm","liveFarmData","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","pools","pastaId","tokenName","earnToken","stakingTokenName","KITTYWBNB","stakingTokenAddress","contractAddress","poolCategory","CORE","projectLink","harvest","tokenPerBlock","sortOrder","isFinished","KITTYCHS","KITTYUSDT","KITTY","fetchPoolsBlockLimits","poolsWithEnd","poolsConfig","filter","p","callsStartBlock","poolConfig","callsEndBlock","pastaChefABI","starts","ends","pizzaPoolConfig","startBlock","endBlock","fetchPoolsTotalStatking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","pizzaABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","bnbPools","nonMasterPools","masterChefContract","masterChefABI","fetchPoolsAllowance","account","erc20ABI","allowances","reduce","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","amount","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingPizza","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","updateUserAllowance","dispatch","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","ZERO","useFetchPublicData","useDispatch","blockLimits","totalStakings","liveData","blockLimit","totalStaking","useFarmFromPid","useSelector","usePools","stakingTokenBalances","allowance","stakingTokenBalance","stakedBalance","fetchPoolsUserDataAsync","usePriceBnbBusd","GlobalStyle","createGlobalStyle","theme","colors","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","projectId","parseInt","REACT_APP_CROWDIN_PROJECT_ID","stringTranslationsApi","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","LanguageContextProvider","setTranslations","storedLangCode","localStorage","getItem","storedLang","getStoredLang","listLanguageTranslations","undefined","fetchTranslationsForSelectedLanguage","then","translationApiResponse","catch","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","config","label","icon","href","Menu","props","useWallet","connect","reset","pizzaPriceUsd","bnbPriceUSD","usePricePizzaBusd","login","logout","currentLang","langs","setLang","toNumber","links","Wrapper","styled","Page","PageLoader","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","getBlockNumber","blockNumber","current","useBlock","getBalanceNumber","balance","decimals","displayBalance","dividedBy","getFullDisplayBalance","toFixed","FlexLayout","UnlockButton","TranslateString","onPresentConnectModal","useWalletModal","onClick","StyledLabel","Label","useWeb3","ethereum","refEth","setweb3","useContract","contractOptions","contract","setContract","useERC20","useMasterchef","usePastaChef","id","rawAbi","BINANCE","pastaChefBnb","approve","lpContract","options","ethers","constants","MaxUint256","send","from","stake","enterStaking","on","tx","transactionHash","deposit","pastaStake","pastaChefContract","pastaStakeBnb","unstake","leaveStaking","withdraw","pastaUnstake","emergencyWithdraw","pastaEmegencyUnstake","pastahHarvest","pastahHarvestBnb","PASTAIDS","StyledText","Text","isDisabled","color","textDisabled","Balance","fontSize","unit","previousValue","bold","start","end","duration","separator","defaultProps","StyledSpacer","size","Spacer","s","spacing","StyledModalActions","primaryDark","StyledModalAction","ModalActions","l","Children","toArray","child","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","toLocaleString","DepositModal","onConfirm","onDismiss","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","useCallback","e","currentTarget","handleSelectMax","title","variant","disabled","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","CardTitle","Card","card","isActive","Title","ActionLink","OldPastaTitle","hasBalance","target","StyledButton","button","padding","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","outline","startIcon","COMMUNITY","StyledFooter","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","blocksRemaining","blocksUntilStart","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","style","marginBottom","role","aria-label","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","image","apy","stakingLimit","isBnbPool","stakingTokenContract","onApprove","usePastaApprove","onStake","isUsingBnb","usePastaStake","onUnstake","isOldPasta","txHash","console","usePastaUnstake","onReward","usePastaHarvest","requestedApproval","setRequestedApproval","Math","PASTA","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","display","alignItems","flex","src","width","height","alt","HarvestButton","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","activeIndex","as","textSubtle","Hero","Farm","path","poolsWithApy","rewardTokenFarm","stakingTokenFarm","stakingTokenPriceInBNB","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","priceToBnb","totalStakingTokenInPool","partition","finishedPools","openPools","mb","Divider","Flex","exact","orderBy","CTACards","Home","Pasta","NotFound","lazy","App","window","Global","component","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","Container","mediaQueries","sm","lg","defaultTranslationState"],"mappings":"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","file":"static/js/main.c85d7df3.chunk.js","sourcesContent":["import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  pizzaToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'PIZZA' = 'PIZZA',\n  'CHS' = 'CHS',\n  'USDT' = 'USDT',\n  'BUSD' = 'BUSD',\n  'HOTS' = 'HOTS',\n  'KP3RB' = 'KP3RB',\n  'PASTA' = 'PASTA',\n  'DAI' = 'DAI',\n  'ETH' = 'ETH',\n  'USDC' = 'USDC',\n  'CAKE' = 'CAKE',\n  'XCHS' = 'XCHS',\n  'cPIZZA' = 'cPIZZA',\n  'KITTY' = 'KITTY',\n  'KITTYWBNB' = 'KITTYWBNB',\n  'KITTYCHS' = 'KITTYCHS',\n  'KITTYUSDT' = 'KITTYUSDT'\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  tokenDecimal?: number\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  pastaId: number\n  image?: string\n  tokenName: string\n  earnToken: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","export default {\n  pizza: {\n    97: '',\n    56: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n  },\n  pasta: {\n    97: '',\n    56: '0x4375eA687330A95D42383Ef18AD3ea8C4Db7224d',\n  },\n  masterChef: {\n    97: '',\n    56: '0xD3849bCefE2D032b7EA4e01aA18EA5D1797bdcc6',\n  },\n  pastaChef: {\n    97: '',\n    56: '0xB0953765fC1A2a25e8DFBe7c01245132c800d673',\n  },\n  wbnb: {\n    97: '',\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  },\n  lottery: {\n    97: '',\n    56: '0x7e9189C9F263E788c8D5DF80c1Ca1AcbC8059C75',\n  },\n  lotteryNFT: {\n    97: '',\n    56: '0x5e71071c642912Fd12a82774a732670A1678Dc91',\n  },\n  mulltiCall: {\n    56: '0x52E54D127cA6474aB1C700335C4714f2515b4f3D',\n    97: '',\n  },\n  busd: {\n    56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    97: '',\n  },\n  chs: {\n    56: '0xaDD8A06fd58761A5047426e160B2B88AD3B9D464',\n    97: '',\n  },\n  hots: {\n    56: '0x793766efcA4CEF8c55EE950E759AD6FF73D49c09',\n    97: '',\n  },\n  kp3rb: {\n    56: '0x5EA29eEe799aA7cC379FdE5cf370BC24f2Ea7c81',\n    97: '',\n  },\n  usdt: {\n    56: '0x55d398326f99059fF775485246999027B3197955',\n    97: '',\n  },\n   usdc: {\n    56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n    97: '',\n  },\n   dai: {\n    56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n    97: '',\n  },\n  eth: {\n   56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n   97: '',\n },\n xchs: {\n  56: '0x9f51CAA2A1D1663fCa5bEFbFaf6C8acD8Ac9717a',\n  97: '',\n},\nkittywbnb: {\n 56: '0x61cCA94e696981c2Df97bC0e33E4a6583606732A',\n 97: '',\n},\nkittychs: {\n 56: '0xe02ce23ba2e9426a74069d5e2d6f0043d8d44667',\n 97: '',\n},\nkittyusdt: {\n 56: '0xB18B577EF990f554D2685eA509Ff943aA926e585',\n 97: '',\n},\nkitty: {\n 56: '0x5b4963B964bAc5C2Db83e53ffFe46E0cb83a1346',\n 97: '',\n},\ncpizza: {\n 56: '0xda3684575afa20309938434F3d40799B12868057',\n 97: '',\n},\n  pizzaRabbits: {\n    56: '',\n    97: '',\n  },\n  ifo: {\n    56: '0xF90Ee56bCF8411f67FD0E44776b2f2A566Ef5bC2',\n    97: '',\n  },\n}\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    lpSymbol: 'PIZZA',\n    lpAddresses: {\n      97: '',\n      56: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n    },\n    tokenSymbol: 'PASTA',\n    tokenAddresses: {\n      97: '',\n      56: '0x4375eA687330A95D42383Ef18AD3ea8C4Db7224d',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'PIZZA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8405Be915Af56589756A275d4894FA9f0Ff6CA0F',\n    },\n    tokenSymbol: 'PIZZA',\n    tokenAddresses: {\n      97: '',\n      56: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'PIZZA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8cC2f287195F3a1c7736cFE6348DA80e390622f6',\n    },\n    tokenSymbol: 'PIZZA',\n    tokenAddresses: {\n      97: '',\n      56: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    isCommunity: false,\n  },\n  {\n   pid: 11,\n   lpSymbol: 'PIZZA-USDT LP',\n   lpAddresses: {\n     97: '',\n     56: '0x31295b81D5c9388fb3AfDd22bCA517AAF52840f8',\n   },\n   tokenSymbol: 'PIZZA',\n   tokenAddresses: {\n     97: '',\n     56: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n   },\n   quoteTokenSymbol: QuoteToken.USDT,\n   quoteTokenAdresses: contracts.usdt,\n   isCommunity: false,\n },\n {\n  pid: 13,\n  lpSymbol: 'PIZZA-USDC LP',\n  lpAddresses: {\n    97: '',\n    56: '0x36DCBA6A7b5769Acf74cEA7f58564EF1B44362C1',\n  },\n  tokenSymbol: 'PIZZA',\n  tokenAddresses: {\n    97: '',\n    56: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n  },\n  quoteTokenSymbol: QuoteToken.USDC,\n  quoteTokenAdresses: contracts.usdc,\n  isCommunity: false,\n},\n{\n pid: 14,\n lpSymbol: 'PIZZA-DAI LP',\n lpAddresses: {\n   97: '',\n   56: '0xC928dd5D540971e322372EB13bb9003759862faE',\n },\n tokenSymbol: 'PIZZA',\n tokenAddresses: {\n   97: '',\n   56: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n },\n quoteTokenSymbol: QuoteToken.DAI,\n quoteTokenAdresses: contracts.dai,\n isCommunity: false,\n},\n  {\n    pid: 3,\n    lpSymbol: 'PIZZA-CHS LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1E90d3C88A3E830983b70E6EF9799Ff1c0deCE62',\n    },\n    tokenSymbol: 'PIZZA',\n    tokenAddresses: {\n      97: '',\n      56: '0x2cc26dd730F548dc4ac291ae7D84a0C96980d2cB',\n    },\n    quoteTokenSymbol: QuoteToken.CHS,\n    quoteTokenAdresses: contracts.chs,\n  },\n  {\n    pid: 20,\n    lpSymbol: 'PIZZA-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x22Ba59adBd3FB5BA9E59CC8193878620bC63cCA4',\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '',\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n    },\n    quoteTokenSymbol: QuoteToken.PIZZA,\n    quoteTokenAdresses: contracts.pizza,\n    isCommunity: false,\n  },\n  {\n    pid: 18,\n    lpSymbol: 'CAKE-PIZZA LP',\n    lpAddresses: {\n      97: '',\n      56: '0x46f68394943aA90C071a866b8250aa0b370d0659',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    },\n    quoteTokenSymbol: QuoteToken.PIZZA,\n    quoteTokenAdresses: contracts.pizza,\n    isCommunity: true,\n  },\n  {\n    pid: 19,\n    lpSymbol: 'cPIZZA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB91E194847576f84605B0d94Aa4E863558D86C84',\n    },\n    tokenSymbol: 'cPIZZA',\n    tokenAddresses: {\n      97: '',\n      56: '0xda3684575afa20309938434F3d40799B12868057',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n    isCommunity: false,\n  },\n  {\n    pid: 17,\n    lpSymbol: 'XCHS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1E90d3C88A3E830983b70E6EF9799Ff1c0deCE62',\n    },\n    tokenSymbol: 'XCHS',\n    tokenDecimal: 0,\n    tokenAddresses: {\n      97: '',\n      56: '0x9f51CAA2A1D1663fCa5bEFbFaf6C8acD8Ac9717a',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n   pid: 15,\n   lpSymbol: 'BETH-ETH LP',\n   lpAddresses: {\n     97: '',\n     56: '0x48e130085C13dF2069887Cb88b19C9Fbd8DE8877',\n   },\n   tokenSymbol: 'BETH',\n   tokenAddresses: {\n     97: '',\n     56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n   },\n   quoteTokenSymbol: QuoteToken.ETH,\n   quoteTokenAdresses: contracts.eth,\n   isCommunity: false,\n },\n {\n  pid: 16,\n  lpSymbol: 'BETH-PIZZA LP',\n  lpAddresses: {\n    97: '',\n    56: '0x8bd126bD0c09e74006f62aDc68F9c75048835aa0',\n  },\n  tokenSymbol: 'BETH',\n  tokenAddresses: {\n    97: '',\n    56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n  },\n  quoteTokenSymbol: QuoteToken.PIZZA,\n  quoteTokenAdresses: contracts.pizza,\n  isCommunity: false,\n},\n  {\n   pid: 5,\n   lpSymbol: 'BNB-BUSD LP',\n   lpAddresses: {\n     97: '',\n     56: '0xF455f6f7988B752F75488E2CCcC030346d0Cac72',\n   },\n   tokenSymbol: 'BNB',\n   tokenAddresses: {\n     97: '',\n     56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n   },\n   quoteTokenSymbol: QuoteToken.BUSD,\n   quoteTokenAdresses: contracts.busd,\n   isCommunity: false,\n },\n  {\n    pid: 7,\n    lpSymbol: 'ETH-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7d1a03b432c5f04A426F4Eaf41037fe8Dd695b89',\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '',\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n {\n   pid: 6,\n   lpSymbol: 'USDT-BNB LP',\n   lpAddresses: {\n     97: '',\n     56: '0xcfD63197d764cd70d07bB607e6367Ae0E869BaDD',\n   },\n   tokenSymbol: 'USDT',\n   tokenAddresses: {\n     97: '',\n     56: '0x55d398326f99059fF775485246999027B3197955',\n   },\n   quoteTokenSymbol: QuoteToken.BNB,\n   quoteTokenAdresses: contracts.wbnb,\n   isCommunity: false,\n },\n {\n  pid: 8,\n  lpSymbol: 'DAI-BNB LP',\n  lpAddresses: {\n    97: '',\n    56: '0x89D20Dcda1DC49F47BcDA00C3b84Fe30AC3d127b',\n  },\n  tokenSymbol: 'DAI',\n  tokenAddresses: {\n    97: '',\n    56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n  },\n  quoteTokenSymbol: QuoteToken.BNB,\n  quoteTokenAdresses: contracts.wbnb,\n  isCommunity: false,\n},\n{\n pid: 9,\n lpSymbol: 'USDC-BNB LP',\n lpAddresses: {\n   97: '',\n   56: '0x578e8CEc62666D2750D92EcC70bE0961FF3Ab269',\n },\n tokenSymbol: 'USDC',\n tokenAddresses: {\n   97: '',\n   56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n },\n quoteTokenSymbol: QuoteToken.BNB,\n quoteTokenAdresses: contracts.wbnb,\n isCommunity: false,\n},\n  {\n    pid: 4,\n    lpSymbol: 'CHS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x51A162dd678d75C269Ef6680193C019e0B4Bda7E',\n    },\n    tokenSymbol: 'CHS',\n    tokenAddresses: {\n      97: '',\n      56: '0xaDD8A06fd58761A5047426e160B2B88AD3B9D464',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 10,\n    lpSymbol: 'KP3RB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2113bA4000d8a0B201C3e916E63Fe0DCDfBe476a',\n    },\n    tokenSymbol: 'KP3RB',\n    tokenAddresses: {\n      97: '',\n      56: '0x5EA29eEe799aA7cC379FdE5cf370BC24f2Ea7c81',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 12,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x50c218b5c5f3c6062FA320d82Bb133e30AeE83d6',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n    isCommunity: true,\n  },\n]\n\nexport default farms\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getPizzaAddress = () => {\n  return addresses.pizza[chainId]\n}\nexport const getPastaAddress = () => {\n  return addresses.pasta[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n      const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n      // Total value in staking in quote token value\n      const lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(18))\n        .times(new BigNumber(2))\n        .times(lpTokenRatio)\n\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n      const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(quoteTokenDecimals))\n        .times(lpTokenRatio)\n\n      const [info, totalAllocPoint] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\n        poolWeight: poolWeight.toJSON(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n\n{\n pastaId: 1,\n tokenName: 'BNB',\n earnToken: 'BNB',\n stakingTokenName: QuoteToken.KITTYWBNB,\n stakingTokenAddress: '0x61cCA94e696981c2Df97bC0e33E4a6583606732A',    //\n contractAddress: {\n   97: '',\n   56: '0x2661bFF98F4F5bFE5B058C8737f97aF41d3E3333',\n },\n poolCategory: PoolCategory.CORE,\n projectLink: 'https://kittytoken.io/',\n harvest: true,\n tokenPerBlock: '1',\n sortOrder: 1,\n isFinished: false,\n tokenDecimals: 18,\n},\n{\n pastaId: 2,\n tokenName: 'BNB',\n earnToken: 'BNB',\n stakingTokenName: QuoteToken.KITTYCHS,\n stakingTokenAddress: '0xe02ce23ba2e9426a74069d5e2d6f0043d8d44667',    //\n contractAddress: {\n   97: '',\n   56: '0x1C40facA96f4cC8482819db84A6de078e81Ee0a8',\n },\n poolCategory: PoolCategory.CORE,\n projectLink: 'https://kittytoken.io/',\n harvest: true,\n tokenPerBlock: '0.65',\n sortOrder: 2,\n isFinished: false,\n tokenDecimals: 18,\n},\n{\n pastaId: 3,\n tokenName: 'BNB',\n earnToken: 'BNB',\n stakingTokenName: QuoteToken.KITTYUSDT,\n stakingTokenAddress: '0xB18B577EF990f554D2685eA509Ff943aA926e585',    //\n contractAddress: {\n   97: '',\n   56: '0xF5e8281AbCF458EBf7851cF159141Cc9485a2d38',\n },\n poolCategory: PoolCategory.CORE,\n projectLink: 'https://kittytoken.io/',\n harvest: true,\n tokenPerBlock: '0.75',\n sortOrder: 3,\n isFinished: false,\n tokenDecimals: 18,\n},\n{\n pastaId: 4,\n tokenName: 'BNB',\n earnToken: 'BNB',\n stakingTokenName: QuoteToken.KITTY,\n stakingTokenAddress: '0x5b4963B964bAc5C2Db83e53ffFe46E0cb83a1346',    //\n contractAddress: {\n   97: '',\n   56: '0x80dF3616C9E0403D63dDe4f08Bb3B178F945050F',\n },\n poolCategory: PoolCategory.CORE,\n projectLink: 'https://kittytoken.io/',\n harvest: true,\n tokenPerBlock: '0.45',\n sortOrder: 4,\n isFinished: false,\n tokenDecimals: 18,\n},\n]\n\nexport default pools\n","import poolsConfig from 'config/constants/pools'\nimport pastaChefABI from 'config/abi/pastaChef.json'\nimport pizzaABI from 'config/abi/pizza.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getWbnbAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.pastaId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(pastaChefABI, callsStartBlock)\n  const ends = await multicall(pastaChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((pizzaPoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      pastaId: pizzaPoolConfig.pastaId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStatking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingTokenAddress,\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(pizzaABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      pastaId: p.pastaId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      pastaId: p.pastaId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport pastaChefABI from 'config/abi/pastaChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Pizza / Pizza is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.pastaId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.pastaId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.pastaId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.pastaId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(pastaChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.pastaId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Pizza / Pizza pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(pastaChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.pastaId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Pizza / Pizza pool\n  const pendingReward = await masterChefContract.methods.pendingPizza('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.pastaId === pool.pastaId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.pastaId === pool.pastaId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, pastaId } = action.payload\n      const index = state.data.findIndex((p) => p.pastaId === pastaId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.pastaId === pool.pastaId)\n    const totalStaking = totalStakings.find((entry) => entry.pastaId === pool.pastaId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    pastaId: pool.pastaId,\n    allowance: allowances[pool.pastaId],\n    stakingTokenBalance: stakingTokenBalances[pool.pastaId],\n    stakedBalance: stakedBalances[pool.pastaId],\n    pendingReward: pendingRewards[pool.pastaId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (pastaId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ pastaId, field: 'allowance', value: allowances[pastaId] }))\n}\n\nexport const updateUserBalance = (pastaId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ pastaId, field: 'stakingTokenBalance', value: tokenBalances[pastaId] }))\n}\n\nexport const updateUserStakedBalance = (pastaId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ pastaId, field: 'stakedBalance', value: stakedBalances[pastaId] }))\n}\n\nexport const updateUserPendingReward = (pastaId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ pastaId, field: 'pendingReward', value: pendingRewards[pastaId] }))\n}\n\nexport default PoolsSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { State, Farm, Pool } from './types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (pastaId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.pastaId === pastaId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 6 // USDT-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(1).div(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePricePizzaBusd = (): BigNumber => {\n  const pid = 1 // PIZZA-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n}\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { KittyTheme } from '@kittylabs/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends KittyTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Heebo', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  AR,\n  CA,\n  ZHCN,\n  ZHTW,\n  CS,\n  DA,\n  DE,\n  NL,\n  FIL,\n  FI,\n  FR,\n  EL,\n  HI,\n  HU,\n  ID,\n  IT,\n  JA,\n  KO,\n  PTBR,\n  RO,\n  RU,\n  SR,\n  ESES,\n  SVSE,\n  TA,\n  TR,\n  UK,\n  VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pizzaSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECT_ID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch(() => {\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@kittylabs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@kittylabs/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Exchange',\n    icon: 'FarmIcon',\n    href: 'https://info.cheeseswap.app/#/pair/0x61cca94e696981c2df97bc0e33e4a6583606732a',\n  },\n  {\n    label: 'Liquidity Add',\n    icon: 'PoolIcon',\n    href: 'https://cheeseswap.app/#/add/0x5b4963b964bac5c2db83e53fffe46e0cb83a1346/0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n  },\n  {\n    label: 'Token Contract',\n    icon: 'TicketIcon',\n    href: 'https://bscscan.com/address/0x5b4963B964bAc5C2Db83e53ffFe46E0cb83a1346#code',\n  },\n  {\n    label: 'Token Holders',\n    icon: 'TicketIcon',\n    href: 'https://bscscan.com/token/0x5b4963B964bAc5C2Db83e53ffFe46E0cb83a1346#balances',\n  },\n  {\n    label: 'Kitty Web',\n    icon: 'TicketIcon',\n    href: 'https://kittytoken.io',\n  },\n  {\n    label: 'Kitty News',\n    icon: 'TicketIcon',\n    href: 'https://t.me/kittynewsbsc',\n  },\n\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { Menu as UikitMenu } from '@kittylabs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePricePizzaBusd } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const pizzaPriceUsd = usePricePizzaBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      pizzaPriceUsd={pizzaPriceUsd.toNumber()}\n      links={config}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@kittylabs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const PIZZA_PER_BLOCK = new BigNumber(0.25)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const PIZZA_POOL_PID = 1\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React from 'react'\nimport { Button, useWalletModal } from '@kittylabs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getPizzaAddress, getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport pizzaRabbits from 'config/abi/pizzaRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport pastaChef from 'config/abi/pastaChef.json'\nimport pastaChefBnb from 'config/abi/pastaChefBnb.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const usePizza = () => {\n  return useERC20(getPizzaAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const usePizzaRabbits = (address: string) => {\n  const pizzaRabbitsAbi = (pizzaRabbits as unknown) as AbiItem\n  return useContract(pizzaRabbitsAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const usePastaChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.pastaId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? pastaChefBnb : pastaChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const pastaStake = async (pastaChefContract, amount, account) => {\n  return pastaChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const pastaStakeBnb = async (pastaChefContract, amount, account) => {\n  return pastaChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const pastaUnstake = async (pastaChefContract, amount, account) => {\n  if (pastaChefContract.options.address === '0xB0953765fC1A2a25e8DFBe7c01245132c800d673') {\n    return pastaChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (pastaChefContract.options.address === '0xB0953765fC1A2a25e8DFBe7c01245132c800d673') {\n    return pastaChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return pastaChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const pastaEmegencyUnstake = async (pastaChefContract, amount, account) => {\n  return pastaChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const pastahHarvest = async (pastaChefContract, account) => {\n  return pastaChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const pastahHarvestBnb = async (pastaChefContract, account) => {\n  return pastaChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, pastaUnstake, pastaEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, usePastaChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst PASTAIDS = [ 0, 3, 4 ]\n\nexport const usePastaUnstake = (pastaId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const pastaChefContract = usePastaChef(pastaId)\n  const isOldPasta = PASTAIDS.includes(pastaId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (pastaId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldPasta) {\n        const txHash = await pastaEmegencyUnstake(pastaChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await pastaUnstake(pastaChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(pastaId, account))\n      dispatch(updateUserBalance(pastaId, account))\n      dispatch(updateUserPendingReward(pastaId, account))\n    },\n    [account, dispatch, isOldPasta, masterChefContract, pastaChefContract, pastaId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@kittylabs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@kittylabs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button  onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@kittylabs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button  variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          \n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@kittylabs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@kittylabs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  earnToken?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, earnToken = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${earnToken} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-pizza\"\n\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 0px 10px rgb(75, 77, 80, 0.1);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 0px 10px rgb(75, 77, 80, 0.1)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldPastaTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink href=\"/\" target=\"_blank\">\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldPastaTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#2ab770` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#2ab770` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  tokenName: string\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n//  tokenName,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"pasta\">\n                  {' '}\n                </span>\n                {TranslateString(408, 'Total Stake of LPs')}:\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End Block of Stake')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@kittylabs/uikit'\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag }\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@kittylabs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { usePastaApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { usePastaStake } from 'hooks/useStake'\nimport { usePastaUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePastaHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldPastaTitle from './OldPastaTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    pastaId,\n    image,\n    tokenName,\n    earnToken,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = usePastaApprove(stakingTokenContract, pastaId)\n  const { onStake } = usePastaStake(pastaId, isBnbPool)\n  const { onUnstake } = usePastaUnstake(pastaId)\n  const { onReward } = usePastaHarvest(pastaId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldPasta = stakingTokenName === QuoteToken.PASTA\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && pastaId !== 0}>\n      {isFinished && pastaId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && pastaId !== 0}>\n          {isOldPasta && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || stakingTokenName}.png`} width={64} height={64} alt={stakingTokenName} />\n          </div>\n          {account && harvest && !isOldPasta && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldPasta ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {pastaId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldPastaTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && pastaId !== 0} text={TranslateString(330, `${earnToken} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldPasta ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} >\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldPasta\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldPasta && (\n                  <IconButton disabled={isFinished && pastaId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(352, '')}</div>\n          {isFinished || isOldPasta || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            ''\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n               {' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        tokenName={tokenName}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, usePizza, usePastaChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const usePastaApprove = (lpContract: Contract, pastaId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const pastaChefContract = usePastaChef(pastaId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, pastaChefContract, account)\n      dispatch(updateUserAllowance(pastaId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, pastaChefContract, pastaId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const pizzaContract = usePizza()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(pizzaContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, pizzaContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, pastaStake, pastaStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, usePastaChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const usePastaStake = (pastaId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const pastaChefContract = usePastaChef(pastaId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (pastaId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await pastaStakeBnb(pastaChefContract, amount, account)\n      } else {\n        await pastaStake(pastaChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(pastaId, account))\n      dispatch(updateUserBalance(pastaId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, pastaChefContract, pastaId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { pastahHarvest, pastahHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, usePastaChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const usePastaHarvest = (pastaId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const pastaChefContract = usePastaChef(pastaId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (pastaId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await pastahHarvestBnb(pastaChefContract, account)\n    } else {\n      await pastahHarvest(pastaChefContract, account)\n    }\n    dispatch(updateUserPendingReward(pastaId, account))\n    dispatch(updateUserBalance(pastaId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, pastaChefContract, pastaId])\n\n  return { onReward: handleHarvest }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@kittylabs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0}  variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1.7px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@kittylabs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\n\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.pastaId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(282, 'KITTY BNB Mining Pool')}\n          </Heading>\n          <Heading as=\"h4\" size=\"l\" mb=\"14px\">\n            {TranslateString(282, 'Earn BNB by staking KITTY Pairs BNB/CHS/USDT LP')}\n          </Heading>\n          </div>\n            </Hero>\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.pastaId} pool={pool} />\n            ))}\n\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.pastaId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text} from '@kittylabs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\n\n\nimport Pasta from '../Pools'\n\nconst Hero = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 32px;\n  padding-top: 116px;\n  text-align: center;\n\n\n  }\n`\n\n\nconst CTACards = styled.div`\n  align-items: start;\n  margin-bottom: 32px;\n\n`\n\nconst Home: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Page>\n      <Hero>\n        <Heading as=\"h1\" size=\"xl\" mb=\"24px\" color=\"secondary\">\n          {TranslateString(576, 'KITTY BNB Miner')}\n        </Heading>\n        <Text><h1>{TranslateString(578, 'KITTY BNB Miner is the best profitable pool mining in BSC eco-system.')}</h1></Text>\n      </Hero>\n      <div>\n\n      <CTACards>\n       <Pasta />\n      </CTACards>\n\n      </div>\n    </Page>\n  )\n}\n\nexport default Home\n","import React, { Suspense, useEffect, lazy } from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@kittylabs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\n\nimport Pools from './views/Pools'\nimport Home from './views/Home'\n\nconst NotFound = lazy(() => import('./views/NotFound'))\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n\n  return (\n    <Suspense fallback={null}>\n     <HashRouter>\n\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n          <Route path=\"/pools\">\n              <Pools />\n            </Route>\n         <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n          </HashRouter>\n    </Suspense>\n  )\n}\n\nexport default React.memo(App)\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@kittylabs/uikit'\nimport bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <UseWalletProvider\n            chainId={parseInt(process.env.REACT_APP_CHAIN_ID)}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n"],"sourceRoot":""}